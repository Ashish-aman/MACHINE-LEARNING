# -*- coding: utf-8 -*-
"""M22MA002_Task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ddRwHI1oSygNP2vgGcIhoSQe2N2KzC7B

importing all the necessary libraries
"""

# Commented out IPython magic to ensure Python compatibility.

import pandas as pd
import numpy as np
import math
import operator
import matplotlib.pyplot as plt
# %matplotlib inline

"""uploading data from local drive

"""

# uplading data file from local drive in google colab
from google.colab import files
uploaded = files.upload()

import io

# reading csv file as pandas dataframe
data = pd.read_csv(io.BytesIO(uploaded['Rainfall_dataset.csv']))
print(data)

X = data['Rainfall (mm)'].values
Y = data['Yield (hg/ha)'].values

# calculate mean of x & y using an inbuilt numpy method mean()
mean_x = np.mean(X)
mean_y = np.mean(Y)

m = len(X)

# using the formula to calculate m & c
numer = 0
denom = 0
for i in range(m):
  numer += (X[i] - mean_x) * (Y[i] - mean_y)
  denom += (X[i] - mean_x) ** 2
m = numer / denom
c = mean_y - (m * mean_x)

print (f'm = {m} \nc = {c}')

# plotting values and regression line

# calculating line values x and y

y = c + m * X
print(y)

plt.plot(X, y, color='#58b970', label='Regression Line')
plt.scatter(X, Y, c='#ef5423', label='data points')

plt.xlabel('Rainfall in mm')
plt.ylabel('Yield (hg/ha)')
plt.legend()
plt.show()

# calculating the crop yield in year 2022
y1 = c + m * 560
print  ('crop yield in year 2022 will be',y1, 'hg/ha')

#reporting of MAE & MSE
sum = 0
sum2=0
m=len(X)
#mse=0
for i in range(m):
  sum += (Y[i] - (c+(m*X[i])))**2
  sum2 += abs(X[i] - (c+(m*X[i])))

mse = sum/m
mae = sum2/m
print ('MSE=',mse)
print ('MAE=',mae)

